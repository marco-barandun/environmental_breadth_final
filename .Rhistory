attribution = '&copy; <a href="https://www.geo.admin.ch/de/about-swiss-geoportal/impressum.html#copyright">swisstopo</a>') %>%
addCircleMarkers(data = plots_map,
lat = ~Latitude, lng = ~Longitude,
popup = ~paste(ID, round(elevation, 0), sep = " - "),
radius = 6, stroke = FALSE, fillOpacity = 1, color = ~pal(value),) %>%
addLegend(pal = pal, values = data$value,
position = "bottomright", title = "Value")
pal <- colorFactor(palette = "viridis", domain = plots_map$priority)
# Create a leaflet map with the Swiss Topographic Map as a basemap
m <- leaflet() %>%
addTiles(urlTemplate = "https://wmts20.geo.admin.ch/1.0.0/ch.swisstopo.pixelkarte-farbe/default/current/3857/{z}/{x}/{y}.jpeg",
attribution = '&copy; <a href="https://www.geo.admin.ch/de/about-swiss-geoportal/impressum.html#copyright">swisstopo</a>') %>%
addCircleMarkers(data = plots_map,
lat = ~Latitude, lng = ~Longitude,
popup = ~paste(ID, round(elevation, 0), sep = " - "),
radius = 6, stroke = FALSE, fillOpacity = 1, color = ~pal(value),) %>%
addLegend(pal = pal, values = data$value,
position = "bottomright", title = "Value")
m
# Create a leaflet map with the Swiss Topographic Map as a basemap
m <- leaflet() %>%
addTiles(urlTemplate = "https://wmts20.geo.admin.ch/1.0.0/ch.swisstopo.pixelkarte-farbe/default/current/3857/{z}/{x}/{y}.jpeg",
attribution = '&copy; <a href="https://www.geo.admin.ch/de/about-swiss-geoportal/impressum.html#copyright">swisstopo</a>') %>%
addCircleMarkers(data = plots_map,
lat = ~Latitude, lng = ~Longitude,
popup = ~paste(ID, round(elevation, 0), sep = " - "),
radius = 6, stroke = FALSE, fillOpacity = 1, color = ~pal(value),) %>%
addLegend(pal = pal, values = plots_map$priority,
position = "bottomright", title = "Value")
pal <- colorFactor(palette = "viridis", domain = plots_map$priority)
# Create a leaflet map with the Swiss Topographic Map as a basemap
m <- leaflet() %>%
addTiles(urlTemplate = "https://wmts20.geo.admin.ch/1.0.0/ch.swisstopo.pixelkarte-farbe/default/current/3857/{z}/{x}/{y}.jpeg",
attribution = '&copy; <a href="https://www.geo.admin.ch/de/about-swiss-geoportal/impressum.html#copyright">swisstopo</a>') %>%
addCircleMarkers(data = plots_map,
lat = ~Latitude, lng = ~Longitude,
popup = ~paste(ID, round(elevation, 0), sep = " - "),
radius = 6, stroke = FALSE, fillOpacity = 1, color = ~pal(priority),) %>%
addLegend(pal = pal, values = plots_map$priority,
position = "bottomright", title = "Value")
setView(lng = 9, lat = 46.4, zoom = 8)
# Create a leaflet map with the Swiss Topographic Map as a basemap
m <- leaflet(plots_map) %>%
addTiles(urlTemplate = "https://wmts20.geo.admin.ch/1.0.0/ch.swisstopo.pixelkarte-farbe/default/current/3857/{z}/{x}/{y}.jpeg",
attribution = '&copy; <a href="https://www.geo.admin.ch/de/about-swiss-geoportal/impressum.html#copyright">swisstopo</a>') %>%
addCircleMarkers(data = plots_map,
lat = ~Latitude, lng = ~Longitude,
popup = ~paste(ID, round(elevation, 0), sep = " - "),
radius = 6, stroke = FALSE, fillOpacity = 1, color = ~pal(priority),) %>%
addLegend(pal = pal, values = plots_map$priority,
position = "bottomright", title = "Value")
m
htmlwidgets::saveWidget(m, file=paste("./2023-plot-map.html", sep = ""))
plots <- read_csv("./2023-joinedPlotSelection_v2.csv") %>%
get_municipality(., municipalities, what = c("NAME_1", "NAME_3")) %>%
rename(canton = NAME_1,
municipality = NAME_3) %>%
mutate(priority = gsub("A", "", priority)) %>%
arrange(priority, canton, municipality, elevation) %>%
group_by(municipality) %>%
mutate(ID = paste0(priority, "-",
toupper(substr(canton, 1, 2)), "-",
toupper(substr(municipality, 1, 2)), "-",
row_number())) %>%
ungroup() %>%
select(ID, elevation, canton, municipality, mgroup, LU1980, LU2000, LU2020, LNF_Code, everything()) %>%
arrange(priority, elevation)
write_csv(plots, "./2023-joinedPlotSelection_v3.csv")
(t <- DT::datatable(plots,
class = "display nowrap",
escape = F,
rownames = FALSE))
htmltools::save_html(t, file="2023-plot-table.html")
plots_map <- plots %>%
filter(priority %in% c("MP1", "MP2", "P1"))
pal <- colorFactor(palette = "viridis", domain = plots_map$priority)
# Create a leaflet map with the Swiss Topographic Map as a basemap
m <- leaflet(plots_map) %>%
addTiles(urlTemplate = "https://wmts20.geo.admin.ch/1.0.0/ch.swisstopo.pixelkarte-farbe/default/current/3857/{z}/{x}/{y}.jpeg",
attribution = '&copy; <a href="https://www.geo.admin.ch/de/about-swiss-geoportal/impressum.html#copyright">swisstopo</a>') %>%
addCircleMarkers(data = plots_map,
lat = ~Latitude, lng = ~Longitude,
popup = ~paste(ID, round(elevation, 0), sep = " - "),
radius = 6, stroke = FALSE, fillOpacity = 1, color = ~pal(priority),) %>%
addLegend(pal = pal, values = plots_map$priority,
position = "bottomright", title = "Value")
setView(lng = 9, lat = 46.4, zoom = 8)
plots_map <- plots %>%
filter(priority %in% c("MP1", "MP2", "P1"))
pal <- colorFactor(palette = "viridis", domain = plots_map$priority)
# Create a leaflet map with the Swiss Topographic Map as a basemap
m <- leaflet(plots_map) %>%
addTiles(urlTemplate = "https://wmts20.geo.admin.ch/1.0.0/ch.swisstopo.pixelkarte-farbe/default/current/3857/{z}/{x}/{y}.jpeg",
attribution = '&copy; <a href="https://www.geo.admin.ch/de/about-swiss-geoportal/impressum.html#copyright">swisstopo</a>') %>%
addCircleMarkers(data = plots_map,
lat = ~Latitude, lng = ~Longitude,
popup = ~paste(ID, round(elevation, 0), sep = " - "),
radius = 6, stroke = FALSE, fillOpacity = 1, color = ~pal(priority),) %>%
addLegend(pal = pal, values = plots_map$priority,
position = "bottomright", title = "Value")
# Create a leaflet map with the Swiss Topographic Map as a basemap
m <- leaflet(plots_map) %>%
addTiles(urlTemplate = "https://wmts20.geo.admin.ch/1.0.0/ch.swisstopo.pixelkarte-farbe/default/current/3857/{z}/{x}/{y}.jpeg",
attribution = '&copy; <a href="https://www.geo.admin.ch/de/about-swiss-geoportal/impressum.html#copyright">swisstopo</a>') %>%
addCircleMarkers(data = plots_map,
lat = ~Latitude, lng = ~Longitude,
popup = ~paste(ID, round(elevation, 0), sep = " - "),
radius = 6, stroke = FALSE, fillOpacity = 1, color = ~pal(priority),) %>%
addLegend(pal = pal, values = plots_map$priority,
position = "bottomright", title = "Value") %>%
setView(lng = 9, lat = 46.4, zoom = 8)
m
# Create a leaflet map with the Swiss Topographic Map as a basemap
m <- leaflet(plots_map) %>%
addTiles(urlTemplate = "https://wmts20.geo.admin.ch/1.0.0/ch.swisstopo.pixelkarte-farbe/default/current/3857/{z}/{x}/{y}.jpeg",
attribution = '&copy; <a href="https://www.geo.admin.ch/de/about-swiss-geoportal/impressum.html#copyright">swisstopo</a>') %>%
addCircleMarkers(data = plots_map,
lat = ~Latitude, lng = ~Longitude,
popup = ~paste(ID, round(elevation, 0), sep = " - "),
radius = 6, stroke = FALSE, fillOpacity = 1, color = ~pal(priority),) %>%
addLegend(pal = pal, values = plots_map$priority,
position = "bottomright", title = "Value") %>%
addScaleBar(position = "bottomleft") %>%
setView(lng = 9, lat = 46.4, zoom = 8)
m
htmlwidgets::saveWidget(m, file=paste("./2023-plot-map.html", sep = ""))
# Create a leaflet map with the Swiss Topographic Map as a basemap
m <- leaflet(plots_map) %>%
addTiles(urlTemplate = "https://wmts20.geo.admin.ch/1.0.0/ch.swisstopo.pixelkarte-farbe/default/current/3857/{z}/{x}/{y}.jpeg",
attribution = '&copy; <a href="https://www.geo.admin.ch/de/about-swiss-geoportal/impressum.html#copyright">swisstopo</a>') %>%
addCircleMarkers(data = plots_map,
lat = ~Latitude, lng = ~Longitude,
label = ~paste(ID, round(elevation, 0), sep = " - "),
popup = ~paste(ID, round(elevation, 0), sep = " - "),
radius = 6, stroke = FALSE, fillOpacity = 1, color = ~pal(priority),) %>%
addLegend(pal = pal, values = plots_map$priority,
position = "bottomright", title = "Value") %>%
addScaleBar(position = "bottomleft") %>%
setView(lng = 9, lat = 46.4, zoom = 8)
m
# Create a leaflet map with the Swiss Topographic Map as a basemap
m <- leaflet(plots_map) %>%
addTiles(urlTemplate = "https://wmts20.geo.admin.ch/1.0.0/ch.swisstopo.pixelkarte-farbe/default/current/3857/{z}/{x}/{y}.jpeg",
attribution = '&copy; <a href="https://www.geo.admin.ch/de/about-swiss-geoportal/impressum.html#copyright">swisstopo</a>') %>%
addCircleMarkers(data = plots_map,
lat = ~Latitude, lng = ~Longitude,
label = ~paste(ID, round(elevation, 0), sep = " - "),
labelOptions = labelOptions(noHide = T,
direction = 'top',
textOnly = T),
popup = ~paste(ID, round(elevation, 0), sep = " - "),
radius = 6, stroke = FALSE, fillOpacity = 1, color = ~pal(priority),) %>%
addLegend(pal = pal, values = plots_map$priority,
position = "bottomright", title = "Value") %>%
addScaleBar(position = "bottomleft") %>%
setView(lng = 9, lat = 46.4, zoom = 8)
m
?labelOptions
leaflet(plots_map) %>%
addTiles(urlTemplate = "https://wmts20.geo.admin.ch/1.0.0/ch.swisstopo.pixelkarte-farbe/default/current/3857/{z}/{x}/{y}.jpeg",
attribution = '&copy; <a href="https://www.geo.admin.ch/de/about-swiss-geoportal/impressum.html#copyright">swisstopo</a>') %>%
addCircleMarkers(data = plots_map,
lat = ~Latitude, lng = ~Longitude,
label = ~paste(ID, round(elevation, 0), sep = " - "),
labelOptions = labelOptions(noHide = T,
direction = 'top',
textOnly = T,
unloadInvisibleTiles = T),
popup = ~paste(ID, round(elevation, 0), sep = " - "),
radius = 6, stroke = FALSE, fillOpacity = 1, color = ~pal(priority),) %>%
addLegend(pal = pal, values = plots_map$priority,
position = "bottomright", title = "Value") %>%
addScaleBar(position = "bottomleft") %>%
setView(lng = 9, lat = 46.4, zoom = 8)
# Create a leaflet map with the Swiss Topographic Map as a basemap
m <- leaflet(plots_map) %>%
addTiles(urlTemplate = "https://wmts20.geo.admin.ch/1.0.0/ch.swisstopo.pixelkarte-farbe/default/current/3857/{z}/{x}/{y}.jpeg",
attribution = '&copy; <a href="https://www.geo.admin.ch/de/about-swiss-geoportal/impressum.html#copyright">swisstopo</a>') %>%
addCircleMarkers(data = plots_map,
lat = ~Latitude, lng = ~Longitude,
popup = ~paste(ID, round(elevation, 0), sep = " - "),
radius = 6, stroke = FALSE, fillOpacity = 1, color = ~pal(priority),) %>%
addPopups(~paste(ID, round(elevation, 0), sep = " - ")) %>%
addLegend(pal = pal, values = plots_map$priority,
position = "bottomright", title = "Value") %>%
addScaleBar(position = "bottomleft") %>%
setView(lng = 9, lat = 46.4, zoom = 8)
# Create a leaflet map with the Swiss Topographic Map as a basemap
m <- leaflet(plots_map) %>%
addTiles(urlTemplate = "https://wmts20.geo.admin.ch/1.0.0/ch.swisstopo.pixelkarte-farbe/default/current/3857/{z}/{x}/{y}.jpeg",
attribution = '&copy; <a href="https://www.geo.admin.ch/de/about-swiss-geoportal/impressum.html#copyright">swisstopo</a>') %>%
addCircleMarkers(data = plots_map,
lat = ~Latitude, lng = ~Longitude,
popup = ~paste(ID, round(elevation, 0), sep = " - "),
radius = 6, stroke = FALSE, fillOpacity = 1, color = ~pal(priority),) %>%
addPopups(lat = ~Latitude, lng = ~Longitude, ~paste(ID, round(elevation, 0), sep = " - ")) %>%
addLegend(pal = pal, values = plots_map$priority,
position = "bottomright", title = "Value") %>%
addScaleBar(position = "bottomleft") %>%
setView(lng = 9, lat = 46.4, zoom = 8)
m
leaflet(plots_map) %>%
addTiles(urlTemplate = "https://wmts20.geo.admin.ch/1.0.0/ch.swisstopo.pixelkarte-farbe/default/current/3857/{z}/{x}/{y}.jpeg",
attribution = '&copy; <a href="https://www.geo.admin.ch/de/about-swiss-geoportal/impressum.html#copyright">swisstopo</a>') %>%
addCircleMarkers(data = plots_map,
lat = ~Latitude, lng = ~Longitude,
popup = ~paste(ID, round(elevation, 0), sep = " - "),
radius = 6, stroke = FALSE, fillOpacity = 1, color = ~pal(priority),) %>%
addPopups(lat = ~Latitude, lng = ~Longitude, ~paste(ID, round(elevation, 0), sep = " - ")) %>%
addLegend(pal = pal, values = plots_map$priority,
position = "bottomright", title = "Value") %>%
addScaleBar(position = "bottomleft") %>%
setView(lng = 9, lat = 46.4, zoom = 8)
leaflet(plots_map) %>%
addTiles(urlTemplate = "https://wmts20.geo.admin.ch/1.0.0/ch.swisstopo.pixelkarte-farbe/default/current/3857/{z}/{x}/{y}.jpeg",
attribution = '&copy; <a href="https://www.geo.admin.ch/de/about-swiss-geoportal/impressum.html#copyright">swisstopo</a>') %>%
addCircleMarkers(data = plots_map,
lat = ~Latitude, lng = ~Longitude,
popup = ~paste(ID, round(elevation, 0), sep = " - "),
radius = 6, stroke = FALSE, fillOpacity = 1, color = ~pal(priority),) %>%
addPopups(lat = ~Latitude, lng = ~Longitude, ~paste(ID, round(elevation, 0), sep = " - ")) %>%
addLegend(pal = pal, values = plots_map$priority,
position = "bottomright", title = "Value") %>%
addScaleBar(position = "bottomleft") %>%
setView(lng = 9, lat = 46.4, zoom = 8)
# Create a leaflet map with the Swiss Topographic Map as a basemap
m <- leaflet(plots_map) %>%
addTiles(urlTemplate = "https://wmts20.geo.admin.ch/1.0.0/ch.swisstopo.pixelkarte-farbe/default/current/3857/{z}/{x}/{y}.jpeg",
attribution = '&copy; <a href="https://www.geo.admin.ch/de/about-swiss-geoportal/impressum.html#copyright">swisstopo</a>') %>%
addCircleMarkers(data = plots_map,
lat = ~Latitude, lng = ~Longitude,
popup = ~paste(ID, round(elevation, 0), sep = " - "),
radius = 6, stroke = FALSE, fillOpacity = 1, color = ~pal(priority),) %>%
addPopups(lat = ~Latitude, lng = ~Longitude, ~paste(ID, round(elevation, 0), sep = " - "),
closeOnClick = FALSE) %>%
addLegend(pal = pal, values = plots_map$priority,
position = "bottomright", title = "Value") %>%
addScaleBar(position = "bottomleft") %>%
setView(lng = 9, lat = 46.4, zoom = 8)
# Create a leaflet map with the Swiss Topographic Map as a basemap
m <- leaflet(plots_map) %>%
addTiles(urlTemplate = "https://wmts20.geo.admin.ch/1.0.0/ch.swisstopo.pixelkarte-farbe/default/current/3857/{z}/{x}/{y}.jpeg",
attribution = '&copy; <a href="https://www.geo.admin.ch/de/about-swiss-geoportal/impressum.html#copyright">swisstopo</a>') %>%
addCircleMarkers(data = plots_map,
lat = ~Latitude, lng = ~Longitude,
popup = ~paste(ID, round(elevation, 0), sep = " - "),
radius = 6, stroke = FALSE, fillOpacity = 1, color = ~pal(priority),) %>%
addPopups(lat = ~Latitude, lng = ~Longitude, ~paste(ID, round(elevation, 0), sep = " - "),
options = popupOptions(closeOnClick = FALSE)) %>%
addLegend(pal = pal, values = plots_map$priority,
position = "bottomright", title = "Value") %>%
addScaleBar(position = "bottomleft") %>%
setView(lng = 9, lat = 46.4, zoom = 8)
m
# Create a leaflet map with the Swiss Topographic Map as a basemap
m <- leaflet(plots_map) %>%
addTiles(urlTemplate = "https://wmts20.geo.admin.ch/1.0.0/ch.swisstopo.pixelkarte-farbe/default/current/3857/{z}/{x}/{y}.jpeg",
attribution = '&copy; <a href="https://www.geo.admin.ch/de/about-swiss-geoportal/impressum.html#copyright">swisstopo</a>') %>%
addCircleMarkers(data = plots_map,
lat = ~Latitude, lng = ~Longitude,
popup = ~paste(ID, round(elevation, 0), sep = " - "),
radius = 8, stroke = FALSE, fillOpacity = 1, color = ~pal(priority),) %>%
addPopups(lat = ~Latitude, lng = ~Longitude, ~paste(ID, round(elevation, 0), sep = " - "),
options = popupOptions(closeOnClick = FALSE, closeButton = FALSE)) %>%
addLegend(pal = pal, values = plots_map$priority,
position = "bottomright", title = "Value") %>%
addScaleBar(position = "bottomleft") %>%
setView(lng = 9, lat = 46.4, zoom = 8)
leaflet(plots_map) %>%
addTiles(urlTemplate = "https://wmts20.geo.admin.ch/1.0.0/ch.swisstopo.pixelkarte-farbe/default/current/3857/{z}/{x}/{y}.jpeg",
attribution = '&copy; <a href="https://www.geo.admin.ch/de/about-swiss-geoportal/impressum.html#copyright">swisstopo</a>') %>%
addCircleMarkers(data = plots_map,
lat = ~Latitude, lng = ~Longitude,
popup = ~paste(ID, round(elevation, 0), sep = " - "),
radius = 8, stroke = FALSE, fillOpacity = 1, color = ~pal(priority),) %>%
addPopups(lat = ~Latitude, lng = ~Longitude, ~paste(ID, round(elevation, 0), sep = " - "),
options = popupOptions(closeOnClick = FALSE, closeButton = FALSE)) %>%
addLegend(pal = pal, values = plots_map$priority,
position = "bottomright", title = "Value") %>%
addScaleBar(position = "bottomleft") %>%
setView(lng = 9, lat = 46.4, zoom = 8)
leaflet(plots_map) %>%
addTiles(urlTemplate = "https://wmts20.geo.admin.ch/1.0.0/ch.swisstopo.pixelkarte-farbe/default/current/3857/{z}/{x}/{y}.jpeg",
attribution = '&copy; <a href="https://www.geo.admin.ch/de/about-swiss-geoportal/impressum.html#copyright">swisstopo</a>') %>%
addCircleMarkers(data = plots_map,
lat = ~Latitude, lng = ~Longitude,
popup = ~paste(ID, round(elevation, 0), sep = " - "),
radius = 12, stroke = FALSE, fillOpacity = 1, color = ~pal(priority),) %>%
addPopups(lat = ~Latitude, lng = ~Longitude, ~paste(ID, round(elevation, 0), sep = " - "),
options = popupOptions(closeOnClick = FALSE, closeButton = FALSE)) %>%
addLegend(pal = pal, values = plots_map$priority,
position = "bottomright", title = "Value") %>%
addScaleBar(position = "bottomleft") %>%
setView(lng = 9, lat = 46.4, zoom = 8)
# Create a leaflet map with the Swiss Topographic Map as a basemap
m <- leaflet(plots_map) %>%
addTiles(urlTemplate = "https://wmts20.geo.admin.ch/1.0.0/ch.swisstopo.pixelkarte-farbe/default/current/3857/{z}/{x}/{y}.jpeg",
attribution = '&copy; <a href="https://www.geo.admin.ch/de/about-swiss-geoportal/impressum.html#copyright">swisstopo</a>') %>%
addCircleMarkers(data = plots_map,
lat = ~Latitude, lng = ~Longitude,
popup = ~paste(ID, round(elevation, 0), sep = " - "),
radius = 12, stroke = FALSE, fillOpacity = 1, color = ~pal(priority),) %>%
addPopups(lat = ~Latitude, lng = ~Longitude, ~paste(ID, round(elevation, 0), sep = " - "),
options = popupOptions(closeOnClick = FALSE, closeButton = FALSE, direction = 'auto')) %>%
addLegend(pal = pal, values = plots_map$priority,
position = "bottomright", title = "Value") %>%
addScaleBar(position = "bottomleft") %>%
setView(lng = 9, lat = 46.4, zoom = 8)
m
plots <- read_csv("./2023-joinedPlotSelection_v2.csv") %>%
get_municipality(., municipalities, what = c("NAME_1", "NAME_3")) %>%
rename(canton = NAME_1,
municipality = NAME_3) %>%
mutate(priority = gsub("A", "", priority)) %>%
arrange(priority, canton, municipality, elevation) %>%
group_by(municipality) %>%
mutate(ID = paste0(priority, "-",
toupper(substr(canton, 1, 2)), "-",
toupper(substr(municipality, 1, 2)), "-",
row_number())) %>%
ungroup() %>%
select(ID, elevation, canton, municipality, mgroup, LU1980, LU2000, LU2020, LNF_Code, everything()) %>%
arrange(priority, elevation)
write_csv(plots, "./2023-joinedPlotSelection_v3.csv")
(t <- DT::datatable(plots,
class = "display nowrap",
escape = F,
rownames = FALSE))
htmltools::save_html(t, file="2023-plot-table.html")
leaflet(plots_map) %>%
addTiles(urlTemplate = "https://wmts20.geo.admin.ch/1.0.0/ch.swisstopo.pixelkarte-farbe/default/current/3857/{z}/{x}/{y}.jpeg",
attribution = '&copy; <a href="https://www.geo.admin.ch/de/about-swiss-geoportal/impressum.html#copyright">swisstopo</a>') %>%
addCircleMarkers(data = plots_map,
lat = ~Latitude, lng = ~Longitude,
popup = ~paste(ID, round(elevation, 0), sep = " - "),
radius = 12, stroke = FALSE, fillOpacity = 1, color = ~pal(priority),) %>%
addPopups(lat = ~Latitude, lng = ~Longitude, ~paste(ID, round(elevation, 0), sep = " - "),
options = popupOptions(closeOnClick = FALSE, closeButton = FALSE, direction = 'auto')) %>%
addLegend(pal = pal, values = plots_map$priority,
position = "bottomright", title = "Value") %>%
addScaleBar(position = "bottomleft") %>%
setView(lng = 9, lat = 46.4, zoom = 8)
leaflet(plots_map) %>%
addTiles(urlTemplate = "https://wmts20.geo.admin.ch/1.0.0/ch.swisstopo.pixelkarte-farbe/default/current/3857/{z}/{x}/{y}.jpeg",
attribution = '&copy; <a href="https://www.geo.admin.ch/de/about-swiss-geoportal/impressum.html#copyright">swisstopo</a>') %>%
addCircleMarkers(data = plots_map,
lat = ~Latitude, lng = ~Longitude,
popup = ~paste(ID, round(elevation, 0), sep = " - "),
radius = 12, stroke = FALSE, fillOpacity = 1, color = ~pal(priority),) %>%
#addPopups(lat = ~Latitude, lng = ~Longitude, ~paste(ID, round(elevation, 0), sep = " - "),
#          options = popupOptions(closeOnClick = FALSE, closeButton = FALSE, direction = 'auto')) %>%
addLegend(pal = pal, values = plots_map$priority,
position = "bottomright", title = "Value") %>%
addScaleBar(position = "bottomleft") %>%
setView(lng = 9, lat = 46.4, zoom = 8)
leaflet(plots_map) %>%
addTiles(urlTemplate = "https://wmts20.geo.admin.ch/1.0.0/ch.swisstopo.pixelkarte-farbe/default/current/3857/{z}/{x}/{y}.jpeg",
attribution = '&copy; <a href="https://www.geo.admin.ch/de/about-swiss-geoportal/impressum.html#copyright">swisstopo</a>') %>%
addCircleMarkers(data = plots_map,
lat = ~Latitude, lng = ~Longitude,
popup = ~paste(ID, round(elevation, 0), sep = " - "),
radius = 8, stroke = FALSE, fillOpacity = 1, color = ~pal(priority),) %>%
#addPopups(lat = ~Latitude, lng = ~Longitude, ~paste(ID, round(elevation, 0), sep = " - "),
#          options = popupOptions(closeOnClick = FALSE, closeButton = FALSE, direction = 'auto')) %>%
addLegend(pal = pal, values = plots_map$priority,
position = "bottomright", title = "Value") %>%
addScaleBar(position = "bottomleft") %>%
setView(lng = 9, lat = 46.4, zoom = 8)
library(leaflet)
library(DT)
library(scales)
library(tidyverse)
library(sf)
setwd("/Users/marco/GitHub/wiesenbiodiversitaet/R_files")
get_municipality <- function(coords_df, shapefile, what) {
# Remove points that are located in the ocean
occs <- sp::SpatialPointsDataFrame(coords = coords_df %>% dplyr::select(Longitude, Latitude),
data = coords_df) ##check columns for long/lat
shapefile_sp <- as(shapefile, "Spatial")
raster::crs(occs) <- raster::crs(shapefile_sp)
ovr <- sp::over(occs, shapefile_sp) %>% ###overlay world and points
dplyr::select(what)
ds <- cbind(coords_df, ovr)
}
municipalities <- st_read("/Users/marco/kDocuments_Marco/PhD/server/1_original_data/gadm41_CHE.gpkg",
layer = "ADM_ADM_3")
plots <- read_csv("./2023-joinedPlotSelection_v2.csv") %>%
get_municipality(., municipalities, what = c("NAME_1", "NAME_3")) %>%
rename(canton = NAME_1,
municipality = NAME_3) %>%
mutate(priority = gsub("A", "", priority)) %>%
arrange(priority, canton, municipality, elevation) %>%
group_by(municipality) %>%
mutate(ID = paste0(priority, "-",
toupper(substr(canton, 1, 2)), "-",
toupper(substr(municipality, 1, 2)), "-",
row_number())) %>%
ungroup() %>%
select(ID, elevation, canton, municipality, mgroup, LU1980, LU2000, LU2020, LNF_Code, everything()) %>%
arrange(priority, elevation)
write_csv(plots, "./2023-joinedPlotSelection_v3.csv")
(t <- DT::datatable(plots,
class = "display nowrap",
escape = F,
rownames = FALSE))
htmltools::save_html(t, file="2023-plot-table.html")
plots_map <- plots %>%
filter(priority %in% c("MP1", "MP2", "P1"))
pal <- colorFactor(palette = "viridis", domain = plots_map$priority)
# Create a leaflet map with the Swiss Topographic Map as a basemap
m <- leaflet(plots_map) %>%
addTiles(urlTemplate = "https://wmts20.geo.admin.ch/1.0.0/ch.swisstopo.pixelkarte-farbe/default/current/3857/{z}/{x}/{y}.jpeg",
attribution = '&copy; <a href="https://www.geo.admin.ch/de/about-swiss-geoportal/impressum.html#copyright">swisstopo</a>') %>%
addCircleMarkers(data = plots_map,
lat = ~Latitude, lng = ~Longitude,
popup = ~paste(ID, round(elevation, 0), sep = " - "),
radius = 8, stroke = FALSE, fillOpacity = 1, color = ~pal(priority),) %>%
#addPopups(lat = ~Latitude, lng = ~Longitude, ~paste(ID, round(elevation, 0), sep = " - "),
#          options = popupOptions(closeOnClick = FALSE, closeButton = FALSE, direction = 'auto')) %>%
addLegend(pal = pal, values = plots_map$priority,
position = "bottomright", title = "Value") %>%
addScaleBar(position = "bottomleft") %>%
setView(lng = 9, lat = 46.4, zoom = 8)
htmlwidgets::saveWidget(m, file=paste("./2023-plot-map.html", sep = ""))
library(tidyverse)
setwd("/Users/marco/GitHub/environmental_breadth_final/")
m <- read_csv("3_generated_data/res_saved_models/Campanula_thyrsoides_models.rds")
m <- read_csv("./3_generated_data/res_saved_models/Campanula_thyrsoides_models.rds")
View(m)
m <- readRDS("./3_generated_data/res_saved_models/Campanula_thyrsoides_models.rds")
m@variable.importance
str(m)
m@models
m@models[1]
m@models[1]
m@models[1]
m@predictions
m@tune.settings
m@results
m@models$fc.L_rm.1$betas
m@models$fc.L_rm.1$lambdax
m@models$fc.L_rm.1$lambda
m@models$fc.L_rm.1$beta
m@models$fc.L_rm.1$beta
m@models$fc.L_rm.1$beta@
m@models$fc.L_rm.1$beta@
m@models$fc.L_rm.1$beta@factors
m@models$fc.L_rm.1$betas
m@models$fc.L_rm.1$beta
m@models$fc.L_rm.1$beta@
m@models$fc.L_rm.1$beta@Dim
m@models$fc.L_rm.1$beta@Dim
m@models$fc.L_rm.1$beta@Dimnames
m@models$fc.L_rm.1$beta@Dimnames$
m@models$fc.L_rm.1$levels
m@models$fc.L_rm.1$betas
m <- readRDS("/Users/marco/Desktop/github old mac/clean_rapoport_v2/res_saved_models/Abarema_acreana_models.rds")
m@models$fc.L_rm.1$beta
m <- readRDS("/Users/marco/Desktop/github old mac/clean_rapoport_v2/res_saved_models/Abarema_acreana_models.rds")
mm <- readRDS("/Users/marco/Desktop/github old mac/clean_rapoport_v2/res_saved_models/Abarema_acreana_models.rds")
m@models$fc.L_rm.1$betas
mm@models$fc.L_rm.1$betas
m <- readRDS("./3_generated_data/res_saved_models/Campanula_thyrsoides_models.rds")
mm <- readRDS("/Users/marco/Desktop/github old mac/clean_rapoport_v2/res_saved_models/Abarema_acreana_models.rds")
m@models$fc.L_rm.1$betas
mm@models$fc.L_rm.1$betas
mm@models$fc.L_rm.1$betas
mm@models$fc.L_rm.1$beta
mm@models$fc.LQ_rm.2.5$beta
mm@models$fc.LQ_rm.2.5$betas
mm@models$fc.L_rm.1
mm@models$fc.L_rm.1$beta@Dimnames
str(mm@models$fc.L_rm.1)
mm@models$fc.L_rm.1$beta
mm@models$[[1]]$betas
mm@models[[1]]$betas
mm@models$fc.L_rm.1$beta@i
mm@models$fc.L_rm.1$beta@
mm@models$fc.L_rm.1$beta@p
mm@models$fc.L_rm.1$beta@Dim
mm@models$fc.L_rm.1$beta@factors
mm@models$fc.L_rm.1$beta@x
mm@models$fc.L_rm.1$beta@Dimnames
mm@models[[5]]$beta@Dimnames
mm@models[[5]]$beta@Dimnames[[1]]
mm@models[[9]]$beta@Dimnames[[1]]
mm@models$fc.LQ_rm.2.5$beta@Dimnames[[1]]
mm@models$fc.LQ_rm.2.5$betas
p <- m@models$fc.L_rm.1
p$a0
p$beta
p$df
p$dim
p$lambda
p$dev.ratio
p$nulldev
p$npasses
p$jerr
p$offset
p$classnames
p$call
p$nobs
p$betas
p$alpha
p$entropy
p$penalty.factor
p$levels
mm@models$fc.LQ_rm.2.5$betas
mm@models
species@models[[8]]$betas
species <- readRDS("/Users/marco/Desktop/github old mac/clean_rapoport_v2/res_saved_models/Abarema_acreana_models.rds")
species@models[[8]]$betas
